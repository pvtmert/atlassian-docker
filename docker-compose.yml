#!/usr/bin/env docker-compose -p atlassian -f

version: "3.2"

networks:
  internal:
    driver: overlay
    internal: true
  external:
    driver: overlay

volumes:
  data:
    driver: local
#     driver_opts:
#      type: nfs

services:

  advisor:
    restart: always
    image: google/cadvisor
    networks:
      - external
    ports:
      - 8001:8080
    deploy:
      mode: global

  visual:
    restart: always
    image: dockersamples/visualizer:stable
    networks:
      - external
    ports:
      - 8002:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints:
          - node.role == manager

  data:
    restart: on-failure
    image: pvtmert/atlassian:data
    build:
      context: ./
      dockerfile: data.dockerfile
    networks:
      - internal
      - external
    ports:
      - 3306:3306
    #volumes: []
      #- type: volume
      #  source: data
      #  target: ./
    deploy:
      placement:
        constraints:
          - node.role == manager

  base:
    restart: on-failure
    image: pvtmert/atlassian:base
    build:
      context: ./
      dockerfile: base.dockerfile
    networks:
      - internal
      - external
    ports:
      - 443:443
      - 80:80
    #volumes_from: data
    #volumes: []
#      - ./nginx.conf:/etc/nginx/sites-enabled/default
#      - type: volume
#        source: data
#        target: /etc/nginx/sites-enabled
#        read_only: true
#        volume:
#          nocopy: true
#      - type: bind
#        source: ./
#        target: /data
#        read_only: true
#        volume:
#          nocopy: true
    depends_on:
      - jira
      - crowd
      - bamboo
      - bitbucket
      - confluence
    deploy:
      placement:
        constraints:
          - node.role == manager

  jira:
    #command: [ "sleep", "999999999" ]
    restart: on-failure
    image: pvtmert/atlassian:jira
    build:
      context: ./
      dockerfile: jira.dockerfile
    networks:
      - internal
    #volumes_from: data
    #volumes: []
      #- ./jira.server.xml:/data/conf/server.xml
    deploy:
      replicas: 1
      mode: replicated
      endpoint_mode: vip
      restart_policy:
        condition: on-failure
        max_attempts: 10
        window: 60s
        delay: 5s
      resources:
        limits:
          cpus: "1.00"
          memory: 1024M
        reservations:
          cpus: "0.50"
          memory: 999M
      placement:
        constraints:
          - node.role == manager



  confluence:
    #command: [ "sleep", "999999999" ]
    restart: on-failure
    image: pvtmert/atlassian:confluence
    build:
      context: ./
      dockerfile: confluence.dockerfile
    networks:
      - internal
    #volumes_from: data
    #volumes: []
      #- ./confluence.server.xml:/data/conf/server.xml
    depends_on:
      - data
    deploy:
      replicas: 1
      mode: replicated
      endpoint_mode: vip
      restart_policy:
        condition: on-failure
        max_attempts: 10
        window: 60s
        delay: 5s
      resources:
        limits:
          cpus: "1.00"
          memory: 1024M
        reservations:
          cpus: "0.50"
          memory: 999M
      placement:
        constraints:
          - node.role == manager

  bitbucket:
    #command: [ "sleep", "999999999" ]
    restart: on-failure
    image: pvtmert/atlassian:bitbucket
    build:
      context: ./
      dockerfile: bitbucket.dockerfile
    networks:
      - internal
    #volumes_from: data
    #volumes: []
    depends_on:
      - data
    deploy:
      replicas: 1
      mode: replicated
      endpoint_mode: vip
      restart_policy:
        condition: on-failure
        max_attempts: 10
        window: 60s
        delay: 5s
      resources:
        limits:
          cpus: "1.00"
          memory: 1024M
        reservations:
          cpus: "0.50"
          memory: 999M
      placement:
        constraints:
          - node.role == manager

  bamboo:
    #command: [ "sleep", "999999999" ]
    restart: on-failure
    image: pvtmert/atlassian:bamboo
    build:
      context: ./
      dockerfile: bamboo.dockerfile
    networks:
      - internal
    #volumes_from: data
    #volumes: []
      #- ./bamboo.server.xml:/data/conf/server.xml
    depends_on:
      - data
    deploy:
      replicas: 1
      mode: replicated
      endpoint_mode: vip
      restart_policy:
        condition: on-failure
        max_attempts: 10
        window: 60s
        delay: 5s
      resources:
        limits:
          cpus: "1.00"
          memory: 1024M
        reservations:
          cpus: "0.50"
          memory: 999M
      placement:
        constraints:
          - node.role == manager

  crowd:
    #command: [ "sleep", "999999999" ]
    restart: on-failure
    image: pvtmert/atlassian:crowd
    build:
      context: ./
      dockerfile: crowd.dockerfile
    networks:
      - internal
    #volumes_from: data
    #volumes: []
      #- ./crowd.server.xml:/data/apache-tomcat/conf/server.xml
    depends_on:
      - data
    deploy:
      replicas: 1
      mode: replicated
      endpoint_mode: vip
      restart_policy:
        condition: on-failure
        max_attempts: 10
        window: 60s
        delay: 5s
      resources:
        limits:
          cpus: "1.00"
          memory: 1024M
        reservations:
          cpus: "0.50"
          memory: 999M
      placement:
        constraints:
          - node.role == manager
