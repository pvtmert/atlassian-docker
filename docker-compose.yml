#!/usr/bin/env docker-compose -p atlassian -f

version: "3.7"

networks:
  hostnet:
    name: host
    external: true
  internal:
    driver: overlay
    internal: true
    external: false
    attachable: true
  external:
    driver: overlay
    internal: false
    external: false
    attachable: true


volumes:
  data:
    external: true
  data_mysql:
    external: true
  data_postgres:
    external: true
  share:
    driver: local
    driver_opts:
      type: nfs
      o: addr=storage,nolock,soft,rw,async,nfsvers=4
      device: ":/mnt"
  jira_home: {}
  crowd_home: {}
  bamboo_home: {}
  bitbucket_home: {}
  confluence_home: {}


x-cfg-deployment: &deploymentcfg
  replicas: 1
  mode: replicated
  endpoint_mode: vip
  restart_policy:
    condition: on-failure
    max_attempts: 10
    window: 60s
    delay: 5s
  resources:
    limits: {}
      #cpus: "2.00"
      #memory: 3G
    reservations:
      cpus: "0.50"
      memory: 1G
  placement:
    constraints:
      - node.role == worker

x-cfg-master: &mastercfg
  mode: replicated
  replicas: 1
  placement:
    constraints:
      - node.role == manager
      #- node.labels.type == lb
    preferences: []
      # - spread: node.role=manager
      # - spread: node.role.manager
      # - spread: node.labels.type

x-cfg-dns: &dnscfg
  - 127.0.0.11
  - dns
  - 8.8.8.8
  - 1.1.1.1
  - 9.9.9.9

x-cfg-healthcheck: &healthcheckcfg
  test: wget -qT5 --spider http://0:8080
  interval: 1m
  timeout: 10s
  retries: 3


services:

  advisor:
    restart: always
    image: google/cadvisor
    networks:
      hostnet: {}
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    healthcheck: *healthcheckcfg
    deploy:
      mode: global

  visual:
    restart: always
    image: dockersamples/visualizer:stable
    networks:
      - external
    ports:
      - 8002:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck: *healthcheckcfg
    deploy: *mastercfg

  dns:
    restart: on-failure
    image: pvtmert/atlassian:dns
    build:
      context: ./
      dockerfile: dns.dockerfile
    networks:
      - internal
      - external
    ports:
      - 53:53
      - 5353:5353
    volumes: []
    deploy:
      <<: *mastercfg
      replicas: 0

  data:
    restart: on-failure
    image: pvtmert/atlassian:data
    build:
      context: ./
      dockerfile: data.dockerfile
    networks:
      - internal
      - external
    ports:
      - 3306:3306
      - 5432:5432
    volumes:
      - type: volume
        source: data_mysql
        target: /var/lib/mysql
      - type: volume
        source: data_postgres
        target: /var/lib/postgresql/9.6/main
    deploy:
      <<: *mastercfg
      placement:
        constraints:
          - node.role == manager
          - node.labels.type == db

  cc:
    restart: on-failure
    image: severalnines/clustercontrol
    build:
      context: ./
      dockerfile: cc.dockerfile
    networks:
      - internal
    ports: []
    volumes: []
    deploy:
      <<: *mastercfg
      replicas: 0
      placement:
        constraints:
          - node.role == manager
          - node.labels.type == db

  base:
    restart: on-failure
    image: pvtmert/atlassian:base
    build:
      context: ./
      dockerfile: base.dockerfile
    networks:
      external: {}
      internal:
        aliases:
          - atl.direct.n0pe.me
    ports:
      - 443:443
      - 80:80
    #volumes_from: data
    volumes: []
      #- ./nginx.conf:/etc/nginx/sites-enabled/default
      #- type: volume
      #  source: data
      #  target: /etc/nginx/sites-enabled
      #  read_only: true
      #  volume:
      #    nocopy: true
      #- type: bind
      #  source: ./
      #  target: /data
      #  read_only: true
      #  volume:
      #    nocopy: true
    depends_on:
      - data
      #- jira
      #- crowd
      #- bamboo
      #- bitbucket
      #- confluence
    healthcheck:
      test: curl -skLm5 https://localhost
      interval: 1m
      timeout: 10s
      retries: 3
    deploy:
      <<: *mastercfg
      placement:
        constraints:
          - node.role == manager
          - node.labels.type == lb

  storage:
    privileged: true
    restart: on-failure
    image: erichough/nfs-server
    build:
      context: ./
      dockerfile: storage.dockerfile
    networks:
      - internal
      - external
    ports:
      - 2049:2049
    volumes:
      #-           share:/mnt
      -       jira_home:/home/jira
      -      crowd_home:/home/crowd
      -     bamboo_home:/home/bamboo
      -  bitbucket_home:/home/bitbucket
      - confluence_home:/home/confluence
      -   data_postgres:/home/postgres
      -      data_mysql:/home/mysql
    environment:
      NFS_EXPORT_1: /home/jira       *(rw,no_subtree_check)
      NFS_EXPORT_2: /home/crowd      *(rw,no_subtree_check)
      NFS_EXPORT_3: /home/bamboo     *(rw,no_subtree_check)
      NFS_EXPORT_4: /home/bitbucket  *(rw,no_subtree_check)
      NFS_EXPORT_5: /home/confluence *(rw,no_subtree_check)
      NFS_EXPORT_6: /home/postgres   *(rw,no_subtree_check)
      NFS_EXPORT_7: /home/mysql      *(rw,no_subtree_check)
    cap_add:
      - SYS_ADMIN
      - SYS_MODULE
    deploy:
      <<: *mastercfg
      replicas: 0

##### JIRA:

  jira:
    #command: [ "sleep", "999999999" ]
    restart: on-failure
    image: pvtmert/atlassian:jira
    build:
      context: ./
      dockerfile: jira.dockerfile
      args:
        - VERSION=7.4.0
    dns: *dnscfg
    networks:
      - internal
    #volumes_from: data
    volumes:
      - jira_home:/home
      #- ./jira.server.xml:/data/conf/server.xml
    depends_on:
      - storage
      - data
      - base
    deploy: *deploymentcfg

##### CROWD:

  crowd:
    #command: [ "sleep", "999999999" ]
    restart: on-failure
    image: pvtmert/atlassian:crowd
    build:
      context: ./
      dockerfile: crowd.dockerfile
      args:
        - VERSION=2.12.0
    dns: *dnscfg
    networks:
      - internal
    #volumes_from: data
    volumes:
      - crowd_home:/home
      #- ./crowd.server.xml:/data/apache-tomcat/conf/server.xml
    depends_on:
      - storage
      - data
      - base
    deploy: *deploymentcfg

##### BAMBOO:

  bamboo:
    #command: [ "sleep", "999999999" ]
    restart: on-failure
    image: pvtmert/atlassian:bamboo
    build:
      context: ./
      dockerfile: bamboo.dockerfile
      args:
        - VERSION=6.1.1
    dns: *dnscfg
    networks:
      - internal
    #volumes_from: data
    volumes:
      - bamboo_home:/home
      #- ./bamboo.server.xml:/data/conf/server.xml
    depends_on:
      - storage
      - data
      - base
    deploy: *deploymentcfg

##### BITBUCKET:

  bitbucket:
    #command: [ "sleep", "999999999" ]
    restart: on-failure
    image: pvtmert/atlassian:bitbucket
    build:
      context: ./
      dockerfile: bitbucket.dockerfile
      args:
        - VERSION=5.1.3
    dns: *dnscfg
    networks:
      - internal
    #volumes_from: data
    volumes:
      - bitbucket_home:/home
    depends_on:
      - storage
      - data
      - base
    deploy: *deploymentcfg


##### CONFLUENCE:

  confluence:
    #command: [ "sleep", "999999999" ]
    restart: on-failure
    image: pvtmert/atlassian:confluence
    build:
      context: ./
      dockerfile: confluence.dockerfile
      args:
        - VERSION=6.6.8
    dns: *dnscfg
    networks:
      - internal
    #volumes_from: data
    volumes:
      - confluence_home:/home
      #- ./confluence.server.xml:/data/conf/server.xml
    depends_on:
      - storage
      - data
      - base
    deploy: *deploymentcfg
